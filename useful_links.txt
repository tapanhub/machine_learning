This repository contains expamples of diffenrent machine learning algorithms using scikit-learn, tensorflow..etc
TODO
Deep Learning for Hackers:
  https://github.com/curiousily/Deep-Learning-For-Hackers
  https://github.com/sgrvinod?tab=overview&from=2019-12-01&to=2019-12-31
Auto Differentiation:
  http://colah.github.io/posts/2015-08-Backprop/
  https://blog.paperspace.com/pytorch-101-understanding-graphs-and-automatic-differentiation/
  https://blog.paperspace.com/pytorch-hooks-gradient-clipping-debugging/
  https://towardsdatascience.com/pytorch-autograd-understanding-the-heart-of-pytorchs-magic-2686cd94ec95#:~:text=Mathematically%2C%20the%20autograd%20class%20is,with%20respect%20to%20another%20vector.
  https://www.youtube.com/watch?v=MswxJw-8PvE
  https://ml-cheatsheet.readthedocs.io/en/latest/backpropagation.html
  https://www.cs.toronto.edu/~rgrosse/courses/csc321_2018/slides/lec10.pdf
  https://medium.com/@14prakash/back-propagation-is-very-simple-who-made-it-complicated-97b794c97e5c
Pytorch hooks:
  https://www.youtube.com/watch?v=syLFCVYua6Q
  
Batch Normalization: 
  https://papers.nips.cc/paper/7996-understanding-batch-normalization.pdf
Convolution Neural Network for image recognization: 
  https://www.youtube.com/playlist?list=PL3FW7Lu3i5JvHM8ljYj-zLfQRF3EO8sYv 
  https://petewarden.com/2015/04/20/why-gemm-is-at-the-heart-of-deep-learning/
  cuDNN: https://arxiv.org/pdf/1410.0759.pdf
  caffe optimization: https://arxiv.org/pdf/1504.04343v1.pdf
Conv backpropagation:
  https://towardsdatascience.com/backpropagation-in-a-convolutional-layer-24c8d64d8509
Gradient Descent:
  https://ruder.io/optimizing-gradient-descent/
  https://en.wikipedia.org/wiki/Stochastic_gradient_descent
  https://en.wikipedia.org/wiki/Automatic_differentiation
Transposed Convolution:
  https://medium.com/activating-robotic-minds/up-sampling-with-transposed-convolution-9ae4f2df52d0
  https://people.eecs.berkeley.edu/~jonlong/long_shelhamer_fcn.pdf
  https://arxiv.org/abs/1603.07285
  gan: https://arxiv.org/pdf/1511.06434v2.pdf
  https://distill.pub/2016/deconv-checkerboard/
  https://missinglink.ai/guides/computer-vision/image-segmentation-deep-learning-methods-applications/

LSTM:
  http://colah.github.io/posts/2015-08-Understanding-LSTMs/
  https://towardsdatascience.com/illustrated-guide-to-lstms-and-gru-s-a-step-by-step-explanation-44e9eb85bf21
  http://karpathy.github.io/2015/05/21/rnn-effectiveness/
  https://github.com/sherjilozair/char-rnn-tensorflow
  https://towardsdatascience.com/neural-network-embeddings-explained-4d028e6f0526
  http://papers.nips.cc/paper/5021-distributed-representations-of-words-and-phrases-and-their-compositionality.pdf
Embeding:
  https://stats.stackexchange.com/questions/270546/how-does-keras-embedding-layer-work
  https://developers.google.com/machine-learning/crash-course/embeddings/video-lecture
  https://stackoverflow.com/questions/41455101/what-is-the-meaning-of-the-word-logits-in-tensorflow
  https://www.tensorflow.org/tutorials/text/word_embeddings
  https://arxiv.org/pdf/1507.07998.pdf ( Document embdding with paragraphs vectors )
  
  
Jupyter:
  https://jupyter-notebook.readthedocs.io/en/stable/examples/Notebook/Working%20With%20Markdown%20Cells.html
  https://machinelearningmastery.com/use-word-embedding-layers-deep-learning-keras/
Convolutional Neural Network:
  https://missinglink.ai/guides/neural-network-concepts/convolutional-neural-network-build-one-keras-pytorch/
Image segmentation:
  https://missinglink.ai/guides/computer-vision/image-segmentation-deep-learning-methods-applications/
  https://medium.com/@arthur_ouaknine/review-of-deep-learning-algorithms-for-image-semantic-segmentation-509a600f7b57
  
 Distributed training:
   https://github.com/tensorflow/examples/blob/master/community/en/docs/deploy/distributed.md
   https://lambdalabs.com/blog/tensorflow-2-0-tutorial-05-distributed-training-multi-node/
   strong scaling: https://arxiv.org/pdf/1807.09161.pdf
  
 Data normalization:
   https://towardsdatascience.com/understand-data-normalization-in-machine-learning-8ff3062101f0

 BenchMarking:
   https://github.com/baidu-research/DeepBench
 Setting Random values while training:
   https://medium.com/@ODSC/properly-setting-the-random-seed-in-ml-experiments-not-as-simple-as-you-might-imagine-219969c84752
   
 Numpy strides:
   https://stackoverflow.com/questions/53097952/how-to-understand-numpy-strides-for-layman
 covid19India data display:
   state plot:
   https://towardsdatascience.com/tracking-corona-covid-19-spread-in-india-using-python-40ef8ffa7e31 
 face recognition:
   https://www.hackster.io/mjrobot/real-time-face-recognition-an-end-to-end-project-a10826
 Feature Engineering, Data cleaning, Data preparation:
   https://machinelearningmastery.com/books-on-data-cleaning-data-preparation-and-feature-engineering/
 Recomended System:
   https://en.wikipedia.org/wiki/Recommender_system
   DLRM: https://ai.facebook.com/blog/dlrm-an-advanced-open-source-deep-learning-recommendation-model/
   Content filtering: https://developers.google.com/machine-learning/recommendation/content-based/basics
  TensorRT:
  https://developer.nvidia.com/gtc/2020/video/s21671

Dont decay learning rate & increase the batchsize:
   https://openreview.net/pdf?id=B1Yy1BxCZ
Transformer:
   https://nlp.seas.harvard.edu/2018/04/03/attention.html
   http://jalammar.github.io/illustrated-transformer/
misc:
   https://towardsdatascience.com/how-to-automatically-import-your-favorite-libraries-into-ipython-or-a-jupyter-notebook-9c69d89aa343
yolov5:
   https://www.analyticsvidhya.com/blog/2021/08/train-your-own-yolov5-object-detection-model/
   https://yanfengliux.medium.com/the-confusing-metrics-of-ap-and-map-for-object-detection-3113ba0386ef
   https://github.com/saimj7/People-Counting-in-Real-Time
   it clone https://github.com/saimj7/People-Counting-in-Real-Time.git
   opencv working with onnx yolov5:https://github.com/ultralytics/yolov5/issues/239
   python export.py --weights yolov5s.pt --include onnx --simplify
   python detect.py --weights yolov5s.onnx  # ONNX Runtime inference
   python detect.py --weights yolov5s.onnx --dnn  # OpenCV DNN inference
object detection:
   https://github.com/sgrvinod/a-PyTorch-Tutorial-to-Object-Detection
   https://www.kaggle.com/rahulkumarpatro/yolo-object-detection
   https://becominghuman.ai/understanding-anchors-backbone-of-object-detection-using-yolo-54962f00fbbb
   
   
